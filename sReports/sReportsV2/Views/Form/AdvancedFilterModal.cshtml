@using System.Globalization
@using sReportsV2.Common.Extensions;
@using sReportsV2.Common.Constants;
@using sReportsV2.Common.Helpers
@using sReportsV2.DTOs;
@using Microsoft.AspNetCore.Http;
@using sReportsV2.DTOs.Form;
@inject IHttpContextAccessor HttpContextAccessor

@{
    bool isDataCapture = ViewBag.Title == sReportsV2.Cache.Resources.TextLanguage.DataCaptureEngine;
    FormFilterDataIn filter = ViewBag.FilterData as FormFilterDataIn;
    string timeFrom = filter != null ? filter.DateTimeFrom.GetTimePart() : "";
    string timeTo = filter != null ? filter.DateTimeTo.GetTimePart() : "";
    string dateFrom = filter != null ? filter.DateTimeFrom.GetDateTimeDisplay(ViewBag.DateFormat as string, excludeTimePart: true) : "";
    string dateTo = filter != null ? filter.DateTimeTo.GetDateTimeDisplay(ViewBag.DateFormat as string, excludeTimePart: true) : "";
}

<form id="advancedFilterForm" name="AdvancedFilterForm" onsubmit="return false">
    <div class="modal fade" id="advancedFilterModal" role="dialog" aria-labelledby="advancedFilterModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content modal-content-advanced form-advanced-content @(isDataCapture ? "form-expanded" : "")">
                <div class="float-right filter-close-btn">
                    <img alt="" class="close-modal" src="/css/img/icons/close_black.svg">

                </div>

                <div class="modal-body modal-body-advanced" id="advancedFilterModalContent">
                    <div class="d-flex advanced-filter-header">
                        <img alt="" class="mr-3" src="/css/img/icons/advanced_filter.svg">@sReportsV2.Cache.Resources.TextLanguage.Advanced_filter
                    </div>

                    <div class="d-flex">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.From
                            </div>
                            <div class="filter-date-time datetime-picker-container">
                                <div class="date-wrapper input-border mr-auto w-60 d-flex">
                                    @await Html.PartialAsync("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO()
                                    {
                                        InputAttributes = new Dictionary<object, object> { 
                                            { "class", "date-helper d-inline-block border-0 date-width input-padding filter-input" }, 
                                            { "value", dateFrom },
                                            { "id", "dateFrom"},
                                            { "name", "dateFrom"}
                                        }
                                    })
                                    <input id="dateTimeFrom" type="text" class="date-time-local d-none form-element-field filter-input" value="@(filter != null && filter.DateTimeFrom != null ? filter.DateTimeFrom.Value.ToString("s") : "")" />
                                    <div class="img-wrapper">
                                        <!img class=" d-inline-block" src="/css/img/icons/datetime_field.svg" @Html.DateTimeDisabled(readOnly: false)>
                                    </div>
                                </div>
                                @await Html.PartialAsync("~/Views/Shared/TimeInput.cshtml", new sReportsV2.DTOs.Common.TimeInputDTO()
                           {
                               InputAttributes = new Dictionary<object, object> {
                                { "class", "time-helper d-inline-block border-0 input-padding filter-input w-90" },
                                { "value", timeFrom },
                                { "id", "timeFrom"},
                                { "name", "timeFrom"}
                                }
                           })
                            </div>
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.To_
                            </div>
                            <div class="filter-date-time datetime-picker-container">
                                <div class="date-wrapper input-border mr-auto w-60 d-flex">
                                    @await Html.PartialAsync("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO()
                                    {
                                        InputAttributes = new Dictionary<object, object> { 
                                            { "class", "date-helper d-inline-block border-0 date-width input-padding filter-input" }, 
                                            { "value", dateTo },
                                            { "id", "dateTo"},
                                            { "name", "dateTo"}
                                        }
                                    })
                                    <input id="dateTimeTo" type="text" class="date-time-local d-none form-element-field filter-input" value="@(filter != null && filter.DateTimeTo != null ? filter.DateTimeTo.Value.ToString("s") : "")" />
                                    <div class="img-wrapper">
                                        <!img class=" d-inline-block" src="/css/img/icons/datetime_field.svg" @Html.DateTimeDisabled(readOnly: false)>
                                    </div>
                                </div>
                                @await Html.PartialAsync("~/Views/Shared/TimeInput.cshtml", new sReportsV2.DTOs.Common.TimeInputDTO()
                           {
                               InputAttributes = new Dictionary<object, object> {
                                { "class", "time-helper d-inline-block border-0 input-padding filter-input w-90" },
                                { "value", timeTo },
                                { "id", "timeTo"},
                                { "name", "timeTo"}
                                }
                           })
                            </div>
                        </div>
                    </div>

                    @if (isDataCapture)
                    {
                        <div class="d-flex margin-top-20">
                            <div class="advanced-filter-item filter-item">
                                <div class="label filter-label">
                                    @sReportsV2.Cache.Resources.TextLanguage.Content
                                </div>
                                <input type="text" class="filter-input" id="content" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.Content : "")">
                            </div>
                            <div class="advanced-filter-item filter-item">
                            </div>
                        </div>
                    }

                    <div class="d-flex margin-top-20">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.Title
                            </div>
                            <input type="text" class="filter-input" id="title" value="@(filter!= null ? filter.Title : "")">
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.ThesaurusId
                            </div>
                            <input type="text" class="filter-input" id="thesaurusId" value="@(filter != null && filter.ThesaurusId > 0 ? filter.ThesaurusId : "")">
                        </div>
                    </div>

                    <div class="d-flex margin-top-20">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.State_
                            </div>
                            <select class="filter-input arrow-select" id="state">
                                <option value=""> @sReportsV2.Cache.Resources.TextLanguage.SelectOption</option>
                                @foreach (var option in Enum.GetNames(typeof(sReportsV2.Common.Enums.FormDefinitionState)))
                                {
                                    string optionLabel = @sReportsV2.Cache.Resources.TextLanguage.ResourceManager.GetString(option);
                                    <option id="State_@option" data-display="@optionLabel" class="advanced-select" value="@option" @(filter != null && filter.State != null && filter.State.ToString() == option ? "selected" : "")>@optionLabel</option>
                                }
                            </select>
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.Explicit_Purpose
                            </div>
                            <select class="filter-input arrow-select" id="explicitPurpose">
                                @{ 
                                    Options("ExplicitPurpose"); 
                                }
                            </select>

                        </div>
                    </div>

                    <div class="d-flex margin-top-20">
                        <div class="advanced-filter-item filter-item ">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.Scope_of_Validity
                            </div>
                            <select class="filter-input arrow-select" id="scopeOfValidity">
                                @{
                                    Options("ScopeOfValidity");
                                }
                            </select>
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.Clinical_Domain
                            </div>
                            <select class="filter-input arrow-select" id="clinicalDomain">
                                <option value=""> @sReportsV2.Cache.Resources.TextLanguage.SelectOption</option>
                                @foreach (var option in ObjectExtension.FilterDataSource(ViewBag.ClinicalDomains, readOnlyMode: true))
                                {
                                    <option id="@option.Id" @(filter.ClinicalDomain == option.Id ? "selected" : "")>@option.Thesaurus.GetPreferredTermByTranslationOrDefault(ViewBag.UserCookieData.ActiveLanguage as string)</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="d-flex margin-top-20">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.Clinical_Context
                            </div>
                            <select class="filter-input arrow-select" id="clinicalContext">
                                @{
                                    Options("ClinicalContext");
                                }
                            </select>
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.Administrative_Context
                            </div>
                            <select class="filter-input arrow-select" id="administrativeContext">
                                @{
                                    Options("AdministrativeContext");
                                }
                            </select>
                        </div>
                    </div>

                    <div class="d-flex">
                        <div class=" margin-top-20 advanced-filter-item filter-item @(HttpContextAccessor.HttpContext.Request.Query["ClinicalContext"] == "FollowUp"? "d-block":"d-none")" id="documentFollowUp" style="width:47%;">
                            <div class="label filter-label">@sReportsV2.Cache.Resources.TextLanguage.FollowUp</div>
                            <select class=" filter-input arrow-select" id="followUp">
                                @{
                                    Options("FollowUp");
                                }
                            </select>
                        </div>


                    </div>

                    <div class="d-flex margin-top-20">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.DocumentClass
                            </div>
                            <select class="filter-input arrow-select" id="classes">
                                @{
                                    Options("Classes");
                                }
                            </select>
                        </div>
                        <div class="advanced-filter-item filter-item ">
                            <div class="label filter-label">
                                @sReportsV2.Cache.Resources.TextLanguage.General_Purpose
                            </div>
                            <select class="filter-input arrow-select" id="generalPurpose">
                                @{
                                    Options("GeneralPurpose");
                                }
                            </select>
                        </div>
                    </div>

                    <div class="d-flex margin-top-20">

                        <div class=" advanced-filter-item filter-item @(HttpContextAccessor.HttpContext.Request.Query["Classes"]=="Other"? "d-block":"d-none")" id="documentClassOther" style="width:47%;">
                            <div class="label filter-label">OTHER(DOCUMENT CLASS)</div>
                            <input class="filter-input" id="documentClassOtherInput" value="@HttpContextAccessor.HttpContext.Request.Query["ClassesOtherValue"]" />
                        </div>
                        <div class="advanced-filter-item filter-item @(HttpContextAccessor.HttpContext.Request.Query["GeneralPurpose"] == "ContextDependent"? "d-block":"d-none")" id="documentContextDependent" style="width:47%;">
                            <div class="label filter-label">@sReportsV2.Cache.Resources.TextLanguage.ContextDependent</div>
                            <select class="filter-input arrow-select" id="contextDependent">
                                @{
                                    Options("ContextDependent");
                                }
                            </select>
                        </div>

                    </div>
                    <div class="advanced-filter-line"></div>
                    <div class="d-flex mt-3 position-relative margin-top-10">
                        <div class="button-wrapper-filter filter-button" id="submitFilterButton">
                            <button class="btn btn-filter-primary w-100 h-100" onclick="advanceFilter()"> @sReportsV2.Cache.Resources.TextLanguage.Filter</button>
                        </div>
                        <div class="button-wrapper-filter cancel-filter-btn float-right" id="close">
                            <a class="btn advanced-cancel" data-dismiss="modal" aria-label="Close">
                                @sReportsV2.Cache.Resources.TextLanguage.Cancel
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@functions {
    private void Options(string key)
    {
        <option value="">@sReportsV2.Cache.Resources.TextLanguage.SelectOption</option>
        var queryValue = HttpContextAccessor.HttpContext.Request.Query[key].ToString();
        foreach (var option in ViewBag.DocumentPropertiesEnums[key] as List<EnumDTO>)
        {
            var optionValue = option.Value;
            var optionLabel = sReportsV2.Cache.Resources.TextLanguage.ResourceManager.GetString(option.Label);
            <option id="@string.Format("{0}_{1}", key, optionValue)" data-display="@optionLabel" value="@optionValue" @(!string.IsNullOrEmpty(queryValue) && optionValue == queryValue ? "selected" : "")>@optionLabel</option>
        }
    }
}

@Html.Raw(ScriptHelper.RenderScript(Url.Content("~/js/sReports/designer/formFilter.js"), "", ""))